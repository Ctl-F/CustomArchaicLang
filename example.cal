proc Foo(entry: "main") {
    link stdio;

    static .cstr hello_message = "Hello World\n";

    glob fn main(.i32 argc, .ptr_ptr argv) .i32 {
        stdio.print_str(hello_message);

        stack .dword_ptr buffer = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
        stack .i32 size = 10;
        stack .i32 index = 0;

        populate_fib(buffer+1, size-1, 0, 1);

        for(index = 0; index<size; index++){
            stdio.print_i32( [ buffer + index ] );

            if(index + 1 < size){
                stdio.putch(',');
                stdio.putch(' ');
            }
        }    
        stdio.putch('\n');

        return 0;
    }

    fn populate_fib(.dword_ptr buffer, .i32 size, .i32 a, .i32 b) {
        if(size <= 0){
            return;
        }

        [buffer] = (a + b);
    
        populate_fib(buffer+1, size-1, b, a+b);
    }
}


lib stdio {
    c_include "stdio.h";

    
    glob fn print_str(.cstr ptr) {
        stack .cstr fmt = "%s";
        $c{{ printf(fmt, ptr); }};
    }
    glob fn print_i32(.i32 val) {
        stack .cstr fmt = "%d";
        $c{{ printf(fmt, val); }};
    }
    glob fn print_f32(.f32 val){
        stack .cstr fmt = "%f";
        $c{{ printf(fmt, val); }};
    }
    glob fn putch(.i8 ch) {
        $c{{ putchar(ch); }};
    }
}

